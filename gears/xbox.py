import discord
from discord.commands import SlashCommandGroup
from discord.ext import commands
from xpa import XPA

from options import xboxapi, myclient

xpa = XPA(xboxapi)


def get_games_amount(xuid):
    games_list = xpa.get_user_achievements(xuid)

    title_count = len(games_list)
    recentgame = games_list[0]["name"]
    curscoreonrecgame = games_list[0]["achievement"]["currentGamerscore"]
    totalscoreonrecgame = games_list[0]["achievement"]["totalGamerscore"]
    return title_count, recentgame, curscoreonrecgame, totalscoreonrecgame


def get_xbox_gamertag(ctx, gamertag):
    if not gamertag:
        author_id = str(ctx.author.id)
        user_data = myclient[f"{str(ctx.guild.id)}"]["Users"].find_one({"_id": author_id})
        if user_data:
            gamertag = user_data.get("xbox")

    return gamertag


class Xbox(commands.Cog):
    def __init__(self, bot):
        self.Bot = bot

    xbox = SlashCommandGroup("xbox", "–ö–æ–º–∞–Ω–¥—ã Xbox")

    @xbox.command(description='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é')
    async def stats(self, ctx: discord.ApplicationContext, gamertag=None):
        Collection = myclient[f"{str(ctx.guild.id)}"]["Users"]
        await ctx.defer()
        gamertag = get_xbox_gamertag(ctx, gamertag)
        if not gamertag:
            await ctx.respond(
                "–í—ã –Ω–µ –ø—Ä–∏–≤—è–∑–∞–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å Xbox –∫ —É—á—ë—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ Discord. –°–¥–µ–ª–∞–π—Ç–µ —ç—Ç–æ, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É `/xbox connect <Gamertag>`!",
                ephemeral=True)
            return
        try:
            gamer_info = xpa.get_account_info_gamertag(gamertag)
            embed = discord.Embed(title=f"–ö–∞—Ä—Ç–æ—á–∫–∞ –∏–≥—Ä–æ–∫–∞ {gamer_info.gamertag}",
                                  color=int(gamer_info.preferredColor["primaryColor"], 16))
            embed.add_field(name="Gamerscore", value=f"üÖñ {gamer_info.gamerScore}")
            if gamer_info.accountTier == "Gold":
                goldstatus = "–ê–∫—Ç–∏–≤–µ–Ω"
            else:
                goldstatus = "–ù–µ –∞–∫—Ç–∏–≤–µ–Ω"
            embed.add_field(name="–°—Ç–∞—Ç—É—Å Game Pass Core", value=goldstatus)
            embed.add_field(name="–§–æ–ª–ª–æ–≤–µ—Ä–æ–≤", value=gamer_info.followerCount)
            embed.add_field(name="–î—Ä—É–∑–µ–π", value=gamer_info.followingCount)
            try:
                title_count, recentgame, curscoreonrecgame, totalscoreonrecgame = get_games_amount(gamer_info.xuid)
                embed.add_field(name="–°—ã–≥—Ä–∞–Ω–æ –∏–≥—Ä", value=title_count)
                embed.add_field(name="–ù–µ–¥–∞–≤–Ω–æ –∏–≥—Ä–∞–ª –≤",
                                value=f"{recentgame} (üÖñ {curscoreonrecgame}/{totalscoreonrecgame})")
            except IndexError:
                embed.add_field(name="–ò–≥—Ä–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", value="–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –ª–∏–±–æ —Å–∫—Ä—ã—Ç–∞")
            embed.add_field(name="–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å",
                            value=f"[–¢—ã–∫](https://account.xbox.com/ru-ru/Profile?Gamertag={str(gamer_info.gamertag).replace(' ', '%20')})")
            try:
                embed.add_field(name="–í–ª–∞–¥–µ–ª–µ—Ü –ø—Ä–æ—Ñ–∏–ª—è", value=f"<@{Collection.find_one({'xbox': gamertag})['_id']}>")
            except TypeError:
                pass
            if gamer_info.isXbox360Gamerpic == True:
                embed.set_thumbnail(
                    url=f"http://avatar.xboxlive.com/avatar/{str(gamer_info.gamertag).replace(' ', '%20')}/avatarpic-l.png")
            else:
                embed.set_thumbnail(url=gamer_info.displayPicRaw)
            await ctx.respond(embed=embed)
        except KeyError as e:
            await ctx.respond(f"‚ùì –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ {e}...", ephemeral=True)

    @xbox.command(description='–ü—Ä–∏–≤—è–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å Xbox –∫ —É—á—ë—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ Discord')
    async def connect(self, ctx: discord.ApplicationContext, gamertag):
        Collection = myclient[f"{str(ctx.guild.id)}"]["Users"]
        await ctx.defer()
        author = str(ctx.author.id)
        try:
            user_info = xpa.get_account_info_gamertag(gamertag)
            Collection.update_one({"_id": author}, {"$set": {"xbox": gamertag}})
            embed = discord.Embed(description=f"–ê–∫–∫–∞—É–Ω—Ç {gamertag} –±—ã–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –≤–∞—à–µ–π —É—á—ë—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏!",
                                  color=int(user_info.preferredColor["primaryColor"], 16))
            embed.set_thumbnail(url=user_info.displayPicRaw)
            await ctx.respond(embed=embed)
        except Exception as e:
            await ctx.respond(f"–ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ {e}.\n–í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –Ω–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–ª–∏ Gamertag.")


def setup(bot):
    bot.add_cog(Xbox(bot))
