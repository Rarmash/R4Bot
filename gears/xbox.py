import discord
from discord.commands import SlashCommandGroup
from discord.ext import commands
from xpa import ErrorHandler as Xbox_err
from xpa import XPA

from modules.firebase import get_from_record, update_record, search_record_id
from options import xboxapi

xpa = XPA(xboxapi)


# Helper function to get the amount of games played by the user (max 1000)
def get_games_amount(xuid):
    games_list = xpa.get_user_achievements(xuid)

    title_count = len(games_list)
    if title_count == 1000:
        title_count = "1000+"

    recentgame = games_list[0]["name"]
    curscoreonrecgame = games_list[0]["achievement"]["currentGamerscore"]
    totalscoreonrecgame = games_list[0]["achievement"]["totalGamerscore"]
    return title_count, recentgame, curscoreonrecgame, totalscoreonrecgame


# Helper function to get the Xbox gamertag of the user
def get_xbox_gamertag(ctx, gamertag):
    if not gamertag:
        author_id = str(ctx.author.id)
        user_data = get_from_record(str(ctx.guild.id), "Users", author_id)
        if user_data:
            gamertag = xpa.get_account_info_xuid(user_data.get("xbox")).Gamertag

    return gamertag


class Xbox(commands.Cog):
    def __init__(self, bot):
        self.Bot = bot

    xbox = SlashCommandGroup("xbox", "–ö–æ–º–∞–Ω–¥—ã Xbox")

    @xbox.command(description='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é')
    @discord.option("gamertag", description="Gamertag –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", required=False)
    async def stats(self, ctx: discord.ApplicationContext, gamertag: str):
        await ctx.defer()
        gamertag = get_xbox_gamertag(ctx, gamertag)
        if not gamertag:
            await ctx.respond(
                "–í—ã –Ω–µ –ø—Ä–∏–≤—è–∑–∞–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å Xbox –∫ —É—á—ë—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ Discord. –°–¥–µ–ª–∞–π—Ç–µ —ç—Ç–æ, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É `/xbox "
                "connect <Gamertag>`!",
                ephemeral=True)
            return
        try:
            gamer_info = xpa.get_account_info_gamertag(gamertag)
            embed = discord.Embed(title=f"–ö–∞—Ä—Ç–æ—á–∫–∞ –∏–≥—Ä–æ–∫–∞ {gamer_info.gamertag}",
                                  color=int(gamer_info.preferredColor["primaryColor"], 16))
            embed.add_field(name="Gamerscore", value=f"üÖñ {gamer_info.gamerScore}")
            if gamer_info.accountTier == "Gold":
                gold_status = "–ê–∫—Ç–∏–≤–µ–Ω"
            else:
                gold_status = "–ù–µ –∞–∫—Ç–∏–≤–µ–Ω"
            embed.add_field(name="–°—Ç–∞—Ç—É—Å Game Pass Core", value=gold_status)
            embed.add_field(name="–§–æ–ª–ª–æ–≤–µ—Ä–æ–≤", value=gamer_info.followerCount)
            embed.add_field(name="–î—Ä—É–∑–µ–π", value=gamer_info.followingCount)
            try:
                title_count, recent_game, currentScoreOnRecentGame, totalScoreOnRecentGame = get_games_amount(
                    gamer_info.xuid)
                embed.add_field(name="–°—ã–≥—Ä–∞–Ω–æ –∏–≥—Ä", value=str(title_count))
                embed.add_field(name="–ù–µ–¥–∞–≤–Ω–æ –∏–≥—Ä–∞–ª –≤",
                                value=f"{recent_game} (üÖñ {currentScoreOnRecentGame}/{totalScoreOnRecentGame})")
            except IndexError:
                embed.add_field(name="–ò–≥—Ä–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", value="–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –ª–∏–±–æ —Å–∫—Ä—ã—Ç–∞")
            embed.add_field(name="–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å",
                            value=f"[–¢—ã–∫](https://www.xbox.com/ru-RU/play/user/{str(gamer_info.gamertag).replace(' ', '%20')})")
            try:
                embed.add_field(name="–í–ª–∞–¥–µ–ª–µ—Ü –ø—Ä–æ—Ñ–∏–ª—è",
                                value=f"<@{search_record_id(str(ctx.guild.id), 'Users', 'xbox', gamertag)}>")
            except IndexError:
                pass
            if gamer_info.isXbox360Gamerpic:  # TODO: rewrite, cuz this method is deprecated
                embed.set_thumbnail(
                    url=f"http://avatar.xboxlive.com/avatar/{str(gamer_info.gamertag).replace(' ', '%20')}/avatarpic-l.png")
            else:
                embed.set_thumbnail(url=gamer_info.displayPicRaw)
            await ctx.respond(embed=embed)
        except Xbox_err.XboxApiNotFoundError:
            await ctx.respond("‚ùó –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω...", ephemeral=True)
        except KeyError as e:
            await ctx.respond(f"‚ùì –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ {e}...", ephemeral=True)

    @xbox.command(description='–ü—Ä–∏–≤—è–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å Xbox –∫ —É—á—ë—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ Discord')
    @discord.option("gamertag", description="Gamertag –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    @discord.guild_only()
    async def connect(self, ctx: discord.ApplicationContext, gamertag: str):
        await ctx.defer()
        author = str(ctx.author.id)
        try:
            user_info = xpa.get_account_info_gamertag(gamertag)
            update_record(str(ctx.guild.id), "Users", str(author), {"xbox": str(user_info.xuid)})
            embed = discord.Embed(description=f"–ê–∫–∫–∞—É–Ω—Ç **{gamertag}** –±—ã–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –≤–∞—à–µ–π —É—á—ë—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏!\n"
                                              f"–ï—Å–ª–∏ –≤—ã –∏–∑–º–µ–Ω–∏—Ç–µ Gamertag, –∑–¥–µ—Å—å –µ–≥–æ –º–µ–Ω—è—Ç—å –Ω–µ –±—É–¥–µ—Ç –Ω—É–∂–Ω–æ.",
                                  color=int(user_info.preferredColor["primaryColor"], 16))
            embed.set_thumbnail(url=user_info.displayPicRaw)
            await ctx.respond(embed=embed)
        except Exception as e:
            await ctx.respond(f"–ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ {e}.\n–í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –Ω–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–ª–∏ Gamertag.")


def setup(bot):
    bot.add_cog(Xbox(bot))
